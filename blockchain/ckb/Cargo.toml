[package]
name = "ckb"
version = "0.111.0"
license = "MIT"
authors = ["Nervos Core Dev <dev@nervos.org>"]
edition = "2021"
build = "build.rs"
description = "CKB is the layer 1 of Nervos Network, a public/permissionless blockchain."
homepage = "https://github.com/nervosnetwork/ckb"
repository = "https://github.com/nervosnetwork/ckb"
rust-version = "1.67.1"

[build-dependencies]
ckb-build-info = { path = "util/build-info", version = "= 0.111.0" }

[dependencies]
ckb-build-info = { path = "util/build-info", version = "= 0.111.0" }
ckb-bin = { path = "ckb-bin", version = "= 0.111.0" }
clap = { version = "=3.2.21" }
toml = "0.5.0"
ckb-jsonrpc-types = { path = "util/jsonrpc-types", version = "= 0.111.0" }
ckb-app-config = { path = "util/app-config", version = "= 0.111.0" }
ckb-network = { path = "network", version = "= 0.111.0" }
ckb-channel = { path = "util/channel", version = "= 0.111.0" }
ckb-types = { path = "util/types", version = "= 0.111.0" }
ckb-hash = { path = "util/hash", version = "= 0.111.0" }
ckb-util = { path = "util", version = "= 0.111.0" }
ckb-chain-spec = { path = "spec", version = "= 0.111.0" }
ckb-crypto = { path = "util/crypto", version = "= 0.111.0" }
ckb-dao-utils = { path = "util/dao/utils", version = "= 0.111.0" }
ckb-test-chain-utils = { path = "util/test-chain-utils", version = "= 0.111.0" }
ckb-resource = { path = "resource", version = "= 0.111.0" }
ckb-async-runtime = { path = "util/runtime", version = "= 0.111.0" }
ckb-logger = { path = "util/logger", version = "= 0.111.0" }
ckb-logger-config = { path = "util/logger-config", version = "= 0.111.0" }
ckb-logger-service = { path = "util/logger-service", version = "= 0.111.0" }
ckb-error = { path = "error", version = "= 0.111.0" }
ckb-constant = { path = "util/constant", version = "= 0.111.0" }
tempfile = "3"
reqwest = { version = "0.11.4", features = ["blocking", "json"] }
rand = "0.7"
ckb-systemtime = { path = "util/systemtime", version = "= 0.111.0" }
serde_json = "1.0"
lazy_static = "1.4.0"
byteorder = "1.3.1"
jsonrpc-core = "18.0"
ctrlc = { version = "3.1", features = ["termination"] }
log = "0.4"

[target.'cfg(not(target_os="windows"))'.dependencies]
nix = { version = "0.24.0", default-features = false, features = ["signal"] }

[dev-dependencies]

[workspace]
# To get a list sorted by dependencies, run devtools/ci/check-cyclic-dependencies.py
members = [
    "util",
    "util/occupied-capacity/core",
    "util/channel",
    "util/systemtime",
    "util/fixed-hash/core",
    "util/build-info",
    "util/logger",
    "util/logger-config",
    "util/metrics-config",
    "util/hash",
    "util/rational",
    "util/rust-unstable-port",
    "benches",
    "db-schema",
    "util/spawn",
    "util/occupied-capacity/macros",
    "util/fixed-hash/macros",
    "util/logger-service",
    "util/runtime",
    "util/stop-handler",
    "util/metrics",
    "util/metrics-service",
    "util/fixed-hash",
    "util/occupied-capacity",
    "util/crypto",
    "util/constant",
    "error",
    "util/multisig",
    "util/gen-types",
    "util/types",
    "util/jsonrpc-types",
    "freezer",
    "resource",
    "pow",
    "util/dao/utils",
    "traits",
    "spec",
    "util/proposal-table",
    "script",
    "util/app-config",
    "db",
    "network",
    "miner",
    "notify",
    "util/memory-tracker",
    "db-migration",
    "util/network-alert",
    "store",
    "util/indexer",
    "util/chain-iter",
    "util/test-chain-utils",
    "util/dao",
    "util/reward-calculator",
    "util/snapshot",
    "verification/traits",
    "verification",
    "verification/contextual",
    "tx-pool",
    "shared",
    "block-filter",
    "chain",
    "sync",
    "util/instrument",
    "rpc",
    "util/launcher/migration-template",
    "util/light-client-protocol-server",
    "util/launcher",
    "ckb-bin"
]

[workspace.dependencies]
tempfile = "3"
itertools = "0.11.0"

[profile.release]
overflow-checks = true

[profile.release.build-override]
opt-level = 3

[profile.bench.build-override]
opt-level = 3

[profile.prod]
inherits = "release"
lto = true
codegen-units = 1

[target.'cfg(all(not(target_env = "msvc"), not(target_os="macos")))'.dependencies]
tikv-jemallocator = { version = "0.5.0", features = ["unprefixed_malloc_on_supported_platforms"] }

[features]
default = []
deadlock_detection = ["ckb-bin/deadlock_detection"]
with_sentry = ["ckb-bin/with_sentry"]
with_dns_seeding = ["ckb-bin/with_dns_seeding"]
profiling = ["tikv-jemallocator/profiling", "ckb-bin/profiling"]
portable = ["ckb-bin/portable"]
march-native = ["ckb-bin/march-native"]
